[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ip-expert-backend"
version = "1.0.0"
description = "IP智慧解答专家系统后端"
authors = [
    {name = "IP Expert Team"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[project.urls]
Homepage = "https://github.com/your-org/ip-expert-backend"
Repository = "https://github.com/your-org/ip-expert-backend"
Documentation = "https://github.com/your-org/ip-expert-backend/docs"

[tool.pytest.ini_options]
# pytest配置
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# 测试输出配置
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=80"
]

# 标记定义
markers = [
    "unit: 单元测试",
    "integration: 集成测试",
    "auth: 认证相关测试",
    "models: 模型测试",
    "api: API测试",
    "cases: 案例管理相关测试",
    "interactions: 多轮交互相关测试",
    "feedback: 反馈相关测试",
    "statistics: 统计API相关测试",
    "slow: 运行较慢的测试"
]

# 测试发现配置
minversion = "7.0"

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/.venv/*",
    "*/__pycache__/*",
    "*/migrations/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app", "config"]
skip = ["migrations"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "flask_sqlalchemy.*",
    "flask_migrate.*",
    "flask_jwt_extended.*",
    "flask_cors.*",
    "redis.*",
    "weaviate.*",
    "langchain.*",
    "dashscope.*"
]
ignore_missing_imports = true

[tool.pylint.messages_control]
disable = [
    "missing-docstring",
    "too-few-public-methods",
    "import-error"
]

[tool.pylint.format]
max-line-length = 88
